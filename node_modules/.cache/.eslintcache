[{"/Users/takuyamizoguchi/Downloads/shopping-cart-react-main 2/src/index.js":"1","/Users/takuyamizoguchi/Downloads/shopping-cart-react-main 2/src/App.js":"2","/Users/takuyamizoguchi/Downloads/shopping-cart-react-main 2/src/pages/contact.jsx":"3","/Users/takuyamizoguchi/Downloads/shopping-cart-react-main 2/src/pages/cart/cart.jsx":"4","/Users/takuyamizoguchi/Downloads/shopping-cart-react-main 2/src/pages/shop/shop.jsx":"5","/Users/takuyamizoguchi/Downloads/shopping-cart-react-main 2/src/context/shop-context.jsx":"6","/Users/takuyamizoguchi/Downloads/shopping-cart-react-main 2/src/components/navbar.jsx":"7","/Users/takuyamizoguchi/Downloads/shopping-cart-react-main 2/src/products.js":"8","/Users/takuyamizoguchi/Downloads/shopping-cart-react-main 2/src/pages/cart/cart-item.jsx":"9","/Users/takuyamizoguchi/Downloads/shopping-cart-react-main 2/src/pages/shop/product.jsx":"10"},{"size":232,"mtime":1670178492000,"results":"11","hashOfConfig":"12"},{"size":740,"mtime":1670178492000,"results":"13","hashOfConfig":"12"},{"size":91,"mtime":1670178492000,"results":"14","hashOfConfig":"12"},{"size":1219,"mtime":1670178492000,"results":"15","hashOfConfig":"12"},{"size":426,"mtime":1670178492000,"results":"16","hashOfConfig":"12"},{"size":1396,"mtime":1670178492000,"results":"17","hashOfConfig":"12"},{"size":430,"mtime":1670178492000,"results":"18","hashOfConfig":"12"},{"size":1270,"mtime":1670178492000,"results":"19","hashOfConfig":"12"},{"size":858,"mtime":1670178492000,"results":"20","hashOfConfig":"12"},{"size":679,"mtime":1670178492000,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"12dpqa9",{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},"/Users/takuyamizoguchi/Downloads/shopping-cart-react-main 2/src/index.js",[],[],"/Users/takuyamizoguchi/Downloads/shopping-cart-react-main 2/src/App.js",[],[],"/Users/takuyamizoguchi/Downloads/shopping-cart-react-main 2/src/pages/contact.jsx",[],[],"/Users/takuyamizoguchi/Downloads/shopping-cart-react-main 2/src/pages/cart/cart.jsx",["56"],[],"import React, { useContext } from \"react\";\nimport { ShopContext } from \"../../context/shop-context\";\nimport { PRODUCTS } from \"../../products\";\nimport { CartItem } from \"./cart-item\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport \"./cart.css\";\nexport const Cart = () => {\n  const { cartItems, getTotalCartAmount, checkout } = useContext(ShopContext);\n  const totalAmount = getTotalCartAmount();\n\n  const navigate = useNavigate();\n\n  return (\n    <div className=\"cart\">\n      <div>\n        <h1>Your Cart Items</h1>\n      </div>\n      <div className=\"cart\">\n        {PRODUCTS.map((product) => {\n          if (cartItems[product.id] !== 0) {\n            return <CartItem data={product} />;\n          }\n        })}\n      </div>\n\n      {totalAmount > 0 ? (\n        <div className=\"checkout\">\n          <p> Subtotal: ${totalAmount} </p>\n          <button onClick={() => navigate(\"/\")}> Continue Shopping </button>\n          <button\n            onClick={() => {\n              checkout();\n              navigate(\"/checkout\");\n            }}\n          >\n            {\" \"}\n            Checkout{\" \"}\n          </button>\n        </div>\n      ) : (\n        <h1> Your Shopping Cart is Empty</h1>\n      )}\n    </div>\n  );\n};\n","/Users/takuyamizoguchi/Downloads/shopping-cart-react-main 2/src/pages/shop/shop.jsx",[],[],"/Users/takuyamizoguchi/Downloads/shopping-cart-react-main 2/src/context/shop-context.jsx",["57"],[],"import { createContext, useEffect, useState } from \"react\";\nimport { PRODUCTS } from \"../products\";\n\nexport const ShopContext = createContext(null);\n\nconst getDefaultCart = () => {\n  let cart = {};\n  for (let i = 1; i < PRODUCTS.length + 1; i++) {\n    cart[i] = 0;\n  }\n  return cart;\n};\n\nexport const ShopContextProvider = (props) => {\n  const [cartItems, setCartItems] = useState(getDefaultCart());\n\n  const getTotalCartAmount = () => {\n    let totalAmount = 0;\n    for (const item in cartItems) {\n      if (cartItems[item] > 0) {\n        let itemInfo = PRODUCTS.find((product) => product.id === Number(item));\n        totalAmount += cartItems[item] * itemInfo.price;\n      }\n    }\n    return totalAmount;\n  };\n\n  const addToCart = (itemId) => {\n    setCartItems((prev) => ({ ...prev, [itemId]: prev[itemId] + 1 }));\n  };\n\n  const removeFromCart = (itemId) => {\n    setCartItems((prev) => ({ ...prev, [itemId]: prev[itemId] - 1 }));\n  };\n\n  const updateCartItemCount = (newAmount, itemId) => {\n    setCartItems((prev) => ({ ...prev, [itemId]: newAmount }));\n  };\n\n  const checkout = () => {\n    setCartItems(getDefaultCart());\n  };\n\n  const contextValue = {\n    cartItems,\n    addToCart,\n    updateCartItemCount,\n    removeFromCart,\n    getTotalCartAmount,\n    checkout,\n  };\n\n  return (\n    <ShopContext.Provider value={contextValue}>\n      {props.children}\n    </ShopContext.Provider>\n  );\n};\n","/Users/takuyamizoguchi/Downloads/shopping-cart-react-main 2/src/components/navbar.jsx",[],[],"/Users/takuyamizoguchi/Downloads/shopping-cart-react-main 2/src/products.js",[],[],"/Users/takuyamizoguchi/Downloads/shopping-cart-react-main 2/src/pages/cart/cart-item.jsx",["58"],[],"import React, { useContext } from \"react\";\nimport { ShopContext } from \"../../context/shop-context\";\n\nexport const CartItem = (props) => {\n  const { id, productName, price, productImage } = props.data;\n  const { cartItems, addToCart, removeFromCart, updateCartItemCount } =\n    useContext(ShopContext);\n\n  return (\n    <div className=\"cartItem\">\n      <img src={productImage} />\n      <div className=\"description\">\n        <p>\n          <b>{productName}</b>\n        </p>\n        <p> Price: ${price}</p>\n        <div className=\"countHandler\">\n          <button onClick={() => removeFromCart(id)}> - </button>\n          <input\n            value={cartItems[id]}\n            onChange={(e) => updateCartItemCount(Number(e.target.value), id)}\n          />\n          <button onClick={() => addToCart(id)}> + </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n","/Users/takuyamizoguchi/Downloads/shopping-cart-react-main 2/src/pages/shop/product.jsx",["59"],[],"import React, { useContext } from \"react\";\nimport { ShopContext } from \"../../context/shop-context\";\n\nexport const Product = (props) => {\n  const { id, productName, price, productImage } = props.data;\n  const { addToCart, cartItems } = useContext(ShopContext);\n\n  const cartItemCount = cartItems[id];\n\n  return (\n    <div className=\"product\">\n      <img src={productImage} />\n      <div className=\"description\">\n        <p>\n          <b>{productName}</b>\n        </p>\n        <p> ${price}</p>\n      </div>\n      <button className=\"addToCartBttn\" onClick={() => addToCart(id)}>\n        Add To Cart {cartItemCount > 0 && <> ({cartItemCount})</>}\n      </button>\n    </div>\n  );\n};\n",{"ruleId":"60","severity":1,"message":"61","line":20,"column":33,"nodeType":"62","messageId":"63","endLine":20,"endColumn":35},{"ruleId":"64","severity":1,"message":"65","line":1,"column":25,"nodeType":"66","messageId":"67","endLine":1,"endColumn":34},{"ruleId":"68","severity":1,"message":"69","line":11,"column":7,"nodeType":"70","endLine":11,"endColumn":33},{"ruleId":"68","severity":1,"message":"69","line":12,"column":7,"nodeType":"70","endLine":12,"endColumn":33},"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]